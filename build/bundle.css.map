{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../ClosableTab.svelte",
    "../../FileLoader.svelte",
    "../../MainPanel.svelte",
    "../../ThreadDetails.svelte",
    "../../ThreadRow.svelte",
    "../../ThreadStates.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import SidePanel from \"./components/SidePanel.svelte\";\n  import MainPanel from \"./components/MainPanel.svelte\";\n\n  import { FileStore } from \"./stores/FileStore\";\n  //export let services;\n\n  //   setContext(\"services\", services);\n\n  //   $: threadNames = Object.keys(\n  //     Object.entries($ThreadStore).reduce((reduced, [fileName, threads]) => {\n  //       return Object.assign({}, reduced, threads);\n  //     }, {})\n  //   ).sort(nameSort);\n\n  //\n\n  //   $: threads = $ThreadStore;\n\n  //   let getThreads = threadName => {\n  //     let ts = fileNames.map(fileName => {\n  //       return threads[fileName] && threads[fileName][threadName];\n  //     });\n  //     console.log(ts);\n  //     return ts;\n  //   };\n\n  //   let getThread = (fileName, threadName) => {\n  //     return threads[fileName] && threads[fileName][threadName]\n  //       ? threads[fileName][threadName]\n  //       : undefined;\n  //   };\n  //   let getThreadState = (fileName, threadName) => {\n  //     return threads[fileName] &&\n  //       threads[fileName][threadName] &&\n  //       threads[fileName][threadName].state\n  //       ? threads[fileName][threadName].state\n  //       : \"\";\n  //   };\n  //   let main;\n  //   let mainSize = 100;\n  //   $: cellWidth = `${Math.floor(mainSize / (fileNames.length + 1)) - 1}px`;\n\n  //   let setMainSize = () => {\n  //     mainSize = main.getBoundingClientRect().width;\n  //   };\n\n  //   let closeTab = ({ detail }) => {\n  //     console.log(\"closeTab\", detail);\n  //     FileStore.remove(detail);\n  //     ThreadStore.remove(detail);\n  //   };\n  //   //let showThreadDetails = threadName => {};\n  //   onMount(setMainSize);\n  //   afterUpdate(setMainSize);\n  //   window.onresize = setMainSize;\n</script>\n\n<style>\n  main {\n    display: grid;\n    grid-column-gap: 5px;\n    grid-template-columns: 100%;\n  }\n  main.loaded {\n    grid-template-columns: 1fr 11fr;\n  }\n</style>\n\n<main class={$FileStore && Object.keys($FileStore).length > 0 ? 'loaded' : ''}>\n  <SidePanel fileStore={$FileStore} />\n  <MainPanel />\n</main>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n  export let identifier;\n  export let eventName;\n  let size = 20;\n  let linecolour = \"#000000\";\n  let fillcolour = \"#FF0000\";\n</script>\n\n<style>\n  .closable {\n    position: relative;\n  }\n\n  .contentcontainer {\n    margin: 10px 0;\n    bottom: 0;\n    padding: 10px;\n    border-top: 1px solid grey;\n    border-right: 1px solid grey;\n    text-align: center;\n    overflow: hidden;\n  }\n  svg {\n    position: absolute;\n    right: 0px;\n    z-index: 10;\n  }\n  svg:hover {\n    /* Start the shake animation and make the animation last for 0.5 seconds */\n    animation: shake 0.5s;\n\n    /* When the animation is finished, start again */\n    animation-iteration-count: infinite;\n  }\n\n  @keyframes shake {\n    0% {\n      transform: translate(1px, 1px) rotate(0deg);\n    }\n    10% {\n      transform: translate(-1px, -2px) rotate(-1deg);\n    }\n    20% {\n      transform: translate(-3px, 0px) rotate(1deg);\n    }\n    30% {\n      transform: translate(3px, 2px) rotate(0deg);\n    }\n    40% {\n      transform: translate(1px, -1px) rotate(1deg);\n    }\n    50% {\n      transform: translate(-1px, 2px) rotate(-1deg);\n    }\n    60% {\n      transform: translate(-3px, 1px) rotate(0deg);\n    }\n    70% {\n      transform: translate(3px, 1px) rotate(-1deg);\n    }\n    80% {\n      transform: translate(-1px, -1px) rotate(1deg);\n    }\n    90% {\n      transform: translate(1px, 2px) rotate(0deg);\n    }\n    100% {\n      transform: translate(1px, -2px) rotate(-1deg);\n    }\n  }\n</style>\n\n<div class=\"closable\">\n  <div class=\"contentcontainer\">\n    <slot name=\"content\" />\n  </div>\n  <svg\n    on:click={dispatch(eventName, identifier)}\n    xml:space=\"preserve\"\n    viewBox=\"0 0 100 100\"\n    y=\"0\"\n    x=\"0\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"\"\n    version=\"1.1\"\n    width={size}\n    height={size}\n    style=\"top:0; right:-{size / 2}px\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g\n      style=\"transform-origin: 50% 50%; transform: rotate(0deg) scale(0.8, 0.8);\">\n      <circle\n        stroke-miterlimit=\"10\"\n        stroke-width=\"8\"\n        stroke={linecolour}\n        fill=\"white\"\n        r=\"40\"\n        cy=\"50\"\n        cx=\"50\"\n        style=\"\" />\n      <path\n        d=\"M60.6 29.5L50 40.1 39.4 29.5c-2.7-2.7-7.1-2.7-9.9 0-2.7 2.7-2.7 7.1 0\n        9.9L40.1 50 29.5 60.6c-2.7 2.7-2.7 7.1 0 9.9s7.1 2.7 9.9 0L50 59.9l10.6\n        10.6c2.7 2.7 7.1 2.7 9.9 0 2.7-2.7 2.7-7.1 0-9.9L59.9\n        50l10.6-10.6c2.7-2.7 2.7-7.1 0-9.9s-7.2-2.7-9.9 0z\"\n        style=\"fill: {fillcolour}\" />\n    </g>\n  </svg>\n\n</div>\n",
    "<script>\n  import { FileStore } from \"../stores/FileStore\";\n  let highlight = false;\n  function handleDragOver(e) {\n    highlight = true;\n  }\n  function handleDragIn(e) {\n    highlight = true;\n  }\n  function handleDragOut(e) {\n    highlight = false;\n  }\n\n  async function handleDrop(e) {\n    highlight = false;\n    let files = [];\n    for (let item of e.dataTransfer.items) {\n      let entry = item.webkitGetAsEntry();\n      if (entry) {\n        if (entry.isDirectory) {\n          let entries = await traverseDirectory(entry);\n          files = files.concat(entries);\n        } else {\n          files = files.concat([entry]);\n        }\n      } else {\n        console.log(\"error: not dropped\", item, entry);\n      }\n    }\n\n    FileStore.addFiles(files);\n  }\n  async function traverseDirectory(dir) {\n    let returnFiles = [];\n\n    let direntries = await readDirectory(dir);\n    for (let entry of direntries) {\n      if (entry.isDirectory) {\n        let entries = await traverseDirectory(entry);\n        returnFiles = returnFiles.concat(entries);\n      } else {\n        returnFiles = returnFiles.concat([entry]);\n      }\n    }\n    return returnFiles;\n  }\n  async function readDirectory(dir) {\n    return new Promise((resolve, reject) => {\n      dir.createReader().readEntries(\n        entries => {\n          resolve(entries);\n        },\n        err => {\n          reject(err);\n        }\n      );\n    });\n  }\n</script>\n\n<style>\n  .highlight {\n    border: 3px solid RGB(0, 128, 0, 0.5) !important;\n    background-color: RGB(0, 255, 0, 0.05) !important;\n  }\n  .dropzone {\n    height: 100px;\n    border: 3px dashed RGB(0, 0, 128, 0.5);\n    background-color: RGB(0, 0, 255, 0.05);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  span {\n    text-align: center;\n  }\n</style>\n\n<div\n  class=\"{highlight ? 'highlight' : ''} dropzone\"\n  on:dragenter|preventDefault={handleDragIn}\n  on:dragleave|preventDefault={handleDragOut}\n  on:dragover|preventDefault={handleDragOver}\n  on:drop|preventDefault={handleDrop}>\n  <span>Drop javacore files</span>\n</div>\n",
    "<script>\n  import { onMount, afterUpdate } from \"svelte\";\n\n  import { FileStore } from \"../stores/FileStore\";\n  import { ThreadStore } from \"../stores/ThreadStore\";\n\n  import ClosableTab from \"./ClosableTab.svelte\";\n  import ThreadRow from \"./ThreadRow.svelte\";\n\n  let threadSortExtract = threadName => {\n    let { groups } = /(?<name>.*?)(?<num>[\\d]*)$/.exec(threadName);\n    return groups;\n  };\n  let nameSort = (a, b) => {\n    let aExtract = threadSortExtract(a);\n    let bExtract = threadSortExtract(b);\n    if (aExtract.name) {\n      let nameCompare = aExtract.name.localeCompare(bExtract.name);\n      if (nameCompare == 0) {\n        let numa = parseInt(aExtract.num);\n        let numb = parseInt(bExtract.num);\n        if (numa === NaN && numb === NaN) {\n          return 0;\n        }\n        if (numa === NaN) {\n          return -1;\n        }\n        if (numb === NaN) {\n          return 1;\n        }\n        return numa - numb;\n      }\n\n      return nameCompare;\n    }\n  };\n\n  $: fileNames = $ThreadStore ? Object.keys($ThreadStore).sort() : [];\n  $: threadNames = $ThreadStore\n    ? Object.keys(\n        Object.entries($ThreadStore).reduce((reduced, [fileName, threads]) => {\n          return Object.assign({}, reduced, threads);\n        }, {})\n      ).sort(nameSort)\n    : [];\n\n  let getThreads = threadName => {\n    let ts = fileNames.map(fileName => {\n      return $ThreadStore[fileName] && $ThreadStore[fileName][threadName];\n    });\n    console.log(ts);\n    return ts;\n  };\n\n  let setMainSize = () => {\n    mainSize = main.getBoundingClientRect().width;\n  };\n\n  let closeTab = ({ detail }) => {\n    console.log(\"closeTab\", detail);\n    FileStore.remove(detail);\n    ThreadStore.remove(detail);\n  };\n\n  let main;\n  let mainSize = 100;\n  $: cellWidth = `${Math.floor(mainSize / (fileNames.length + 1)) - 1}px`;\n  onMount(setMainSize);\n  afterUpdate(setMainSize);\n  window.onresize = setMainSize;\n</script>\n\n<style>\n  .grid {\n    display: grid;\n    grid-column-gap: 1px;\n  }\n</style>\n\n<div class=\"main\" bind:this={main}>\n  <div\n    class=\"grid\"\n    style=\"grid-template-columns: 200px repeat({fileNames.length}, {cellWidth});\">\n\n    <div />\n    {#each fileNames as fileName, index}\n      <ClosableTab\n        eventName=\"closeTab\"\n        identifier={fileName}\n        on:closeTab={closeTab}>\n        <span slot=\"content\">{fileName}</span>\n      </ClosableTab>\n    {/each}\n    {#each threadNames as threadname}\n      <ThreadRow threadName={threadname} threads={getThreads(threadname)} />\n    {/each}\n  </div>\n</div>\n",
    "<script>\n  export let thread;\n</script>\n\n<style>\n  .head {\n    font-weight: 800;\n    border-bottom: 1px solid rgb(0, 0, 0, 0.2);\n  }\n  .stack {\n    padding: 2px;\n    white-space: pre-line;\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    word-break: break-word;\n  }\n</style>\n\n{#if thread}\n  <div class=\"wrapper\">\n    <div class=\"head\">Java Stack</div>\n    <div class=\"stack\">{thread.stack.join('\\n')}</div>\n    <div class=\"head\">Native Stack</div>\n    <div class=\"stack\">{thread.nativeStack.join('\\n')}</div>\n  </div>\n{:else}\n  <div class=\"wrapper\" />\n{/if}\n",
    "<script>\n  import Thread from \"./Thread.svelte\";\n  import ThreadDetails from \"./ThreadDetails.svelte\";\n\n  export let threads;\n  export let threadName;\n\n  let showDetails = false;\n</script>\n\n<style>\n  .row-wrapper {\n    display: contents;\n  }\n  .row-wrapper:hover div {\n    background-color: rgb(0, 0, 0, 0.2) !important;\n  }\n</style>\n\n<div\n  class=\"row-wrapper\"\n  on:click={() => {\n    showDetails = !showDetails;\n  }}>\n  <div style=\"overflow:hidden;\">{threadName}</div>\n  {#each threads as t, index}\n    <Thread thread={t} />\n  {/each}\n</div>\n{#if showDetails}\n  <div\n    class=\"row-wrapper threadDetails\"\n    on:click={() => {\n      showDetails = !showDetails;\n    }}>\n    <div style=\"overflow:hidden;\" />\n    {#each threads as t, index}\n      <ThreadDetails thread={t} />\n    {/each}\n  </div>\n{/if}\n",
    "<script>\n  export let loaded = false;\n</script>\n\n<style>\n  .state div {\n    display: none;\n    padding: 2px;\n  }\n  .loaded div {\n    display: block;\n  }\n</style>\n\n<div class=\"state {loaded ? 'loaded' : ''}\">\n  <div class=\"R\">Running</div>\n  <div class=\"CW\">Waiting</div>\n  <div class=\"B\">Blocked</div>\n  <div class=\"S\">Suspended</div>\n  <div class=\"P\">Parked</div>\n  <div class=\"Z\">Zombie</div>\n</div>\n"
  ],
  "names": [],
  "mappings": "AA2DE,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,GAAG,CACpB,qBAAqB,CAAE,IAAI,AAC7B,CAAC,AACD,IAAI,OAAO,eAAC,CAAC,AACX,qBAAqB,CAAE,GAAG,CAAC,IAAI,AACjC,CAAC;ACtDD,SAAS,cAAC,CAAC,AACT,QAAQ,CAAE,QAAQ,AACpB,CAAC,AAED,iBAAiB,cAAC,CAAC,AACjB,MAAM,CAAE,IAAI,CAAC,CAAC,CACd,MAAM,CAAE,CAAC,CACT,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC1B,YAAY,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAC5B,UAAU,CAAE,MAAM,CAClB,QAAQ,CAAE,MAAM,AAClB,CAAC,AACD,GAAG,cAAC,CAAC,AACH,QAAQ,CAAE,QAAQ,CAClB,KAAK,CAAE,GAAG,CACV,OAAO,CAAE,EAAE,AACb,CAAC,AACD,iBAAG,MAAM,AAAC,CAAC,AAET,SAAS,CAAE,mBAAK,CAAC,IAAI,CAGrB,yBAAyB,CAAE,QAAQ,AACrC,CAAC,AAED,WAAW,mBAAM,CAAC,AAChB,EAAE,AAAC,CAAC,AACF,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,AAC7C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,AAChD,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,AAC9C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,AAC7C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,AAC9C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,CAAC,AAC/C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,AAC9C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,KAAK,CAAC,AAC9C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,IAAI,CAAC,AAC/C,CAAC,AACD,GAAG,AAAC,CAAC,AACH,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,OAAO,IAAI,CAAC,AAC7C,CAAC,AACD,IAAI,AAAC,CAAC,AACJ,SAAS,CAAE,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,CAAC,AAC/C,CAAC,AACH,CAAC;ACXD,UAAU,eAAC,CAAC,AACV,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,CAChD,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,AACnD,CAAC,AACD,SAAS,eAAC,CAAC,AACT,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACtC,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CACtC,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACrB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,UAAU,CAAE,MAAM,AACpB,CAAC;ACFD,KAAK,eAAC,CAAC,AACL,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,GAAG,AACtB,CAAC;ACvED,KAAK,cAAC,CAAC,AACL,WAAW,CAAE,GAAG,CAChB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,AAC5C,CAAC,AACD,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,GAAG,CACZ,WAAW,CAAE,QAAQ,CACrB,aAAa,CAAE,UAAU,CACzB,SAAS,CAAE,UAAU,CACrB,UAAU,CAAE,UAAU,AACxB,CAAC;ACJD,YAAY,4BAAC,CAAC,AACZ,OAAO,CAAE,QAAQ,AACnB,CAAC,AACD,0BAAY,MAAM,CAAC,GAAG,cAAC,CAAC,AACtB,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,UAAU,AAChD,CAAC;ACXD,qBAAM,CAAC,GAAG,eAAC,CAAC,AACV,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,GAAG,AACd,CAAC,AACD,sBAAO,CAAC,GAAG,eAAC,CAAC,AACX,OAAO,CAAE,KAAK,AAChB,CAAC"
}