{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../ClosableTab.svelte",
    "../../FileLoader.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { setContext, onMount, afterUpdate, beforeUpdate } from \"svelte\";\n  import FileLoader from \"./components/FileLoader.svelte\";\n  import ClosableTab from \"./components/ClosableTab.svelte\";\n  import Thread from \"./components/Thread.svelte\";\n\n  import { FileStore } from \"./stores/FileStore\";\n  import { ThreadStore } from \"./stores/ThreadStore\";\n\n  export let services;\n  setContext(\"services\", services);\n\n  $: fileNames = $FileStore.map(file => file.name).sort();\n  $: loaded = fileNames && fileNames.length > 0;\n  $: threadNames = Object.keys(\n    Object.entries($ThreadStore).reduce((reduced, [fileName, threads]) => {\n      return Object.assign({}, reduced, threads);\n    }, {})\n  ).sort(nameSort);\n\n  let threadSortExtract = threadName => {\n    let { groups } = /(?<name>.*?)(?<num>[\\d]*)$/.exec(threadName);\n    return groups;\n  };\n  let nameSort = (a, b) => {\n    let aExtract = threadSortExtract(a);\n    let bExtract = threadSortExtract(b);\n    if (aExtract.name) {\n      let nameCompare = aExtract.name.localeCompare(bExtract.name);\n      if (nameCompare == 0) {\n        let numa = parseInt(aExtract.num);\n        let numb = parseInt(bExtract.num);\n        if (numa === NaN && numb === NaN) {\n          return 0;\n        }\n        if (numa === NaN) {\n          return -1;\n        }\n        if (numb === NaN) {\n          return 1;\n        }\n        return numa - numb;\n      }\n\n      return nameCompare;\n    }\n  };\n\n  $: threads = $ThreadStore;\n\n  let getThread = (fileName, threadName) => {\n    return threads[fileName] && threads[fileName][threadName]\n      ? threads[fileName][threadName]\n      : undefined;\n  };\n  let getThreadState = (fileName, threadName) => {\n    return threads[fileName] &&\n      threads[fileName][threadName] &&\n      threads[fileName][threadName].state\n      ? threads[fileName][threadName].state\n      : \"\";\n  };\n  let main;\n  let mainSize = 100;\n  $: cellWidth = `${Math.floor(mainSize / (fileNames.length + 1)) - 1}px`;\n\n  let setMainSize = () => {\n    mainSize = main.getBoundingClientRect().width;\n  };\n\n  let closeTab = ({ detail }) => {\n    console.log(\"closeTab\", detail);\n    FileStore.remove(detail);\n  };\n\n  onMount(setMainSize);\n  afterUpdate(setMainSize);\n  window.onresize = setMainSize;\n</script>\n\n<style>\n  div {\n    box-sizing: border-box;\n    font-size: 10pt;\n  }\n\n  .main {\n    width: 0px;\n    align-items: stretch;\n  }\n  .sidebar {\n    width: 100%;\n  }\n  .filesloaded .sidebar {\n    flex-basis: 200px;\n  }\n  .filesloaded .main {\n    width: 100% !important;\n    margin: 0 1em;\n  }\n\n  .grid {\n    width: 100%;\n    display: grid;\n    grid-gap: 2px;\n  }\n  .flex-row {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n  .row-wrapper {\n    display: contents;\n  }\n  .row-wrapper:hover div {\n    background-color: rgb(0, 0, 0, 0.2) !important;\n  }\n</style>\n\n<main>\n  <div class={loaded ? 'filesloaded flex-row' : ''}>\n    <div class=\"sidebar\">\n      <div class=\"state {loaded ? '' : 'flex-row'}\">\n        <div class=\"R\">Running</div>\n        <div class=\"CW\">Waiting</div>\n        <div class=\"B\">Blocked</div>\n        <div class=\"S\">Suspended</div>\n        <div class=\"P\">Parked</div>\n        <div class=\"Z\">Zombie</div>\n      </div>\n      <FileLoader />\n    </div>\n    <div class=\"main\" bind:this={main}>\n      <div\n        class=\"grid\"\n        style=\"grid-template-columns: 200px repeat({fileNames.length}, {cellWidth});\">\n\n        <div />\n        {#each fileNames as fileName, index}\n          <ClosableTab\n            eventName=\"closeTab\"\n            identifier={fileName}\n            on:closeTab={closeTab}>\n            <span slot=\"content\">{fileName}</span>\n          </ClosableTab>\n        {/each}\n        {#each threadNames as threadName}\n          <div class=\"row-wrapper\">\n            <div style=\"overflow:hidden;\">{threadName}</div>\n            {#each fileNames as fileName, index}\n              <Thread thread={getThread(fileName, threadName)} />\n            {/each}\n          </div>\n        {/each}\n      </div>\n    </div>\n  </div>\n</main>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n  export let identifier;\n  export let eventName;\n  let size = 20;\n  let linecolour = \"#000000\";\n  let fillcolour = \"#FF0000\";\n</script>\n\n<style>\n  .closable {\n    position: relative;\n  }\n\n  .contentcontainer {\n    margin: 10px 0;\n    bottom: 0;\n    padding: 10px;\n    border-top: 1px solid grey;\n    border-right: 1px solid grey;\n    text-align: center;\n    overflow: hidden;\n  }\n  svg {\n    position: absolute;\n    right: 0px;\n    z-index: 10;\n  }\n  svg:hover {\n    /* Start the shake animation and make the animation last for 0.5 seconds */\n    animation: shake 0.5s;\n\n    /* When the animation is finished, start again */\n    animation-iteration-count: infinite;\n  }\n\n  @keyframes shake {\n    0% {\n      transform: translate(1px, 1px) rotate(0deg);\n    }\n    10% {\n      transform: translate(-1px, -2px) rotate(-1deg);\n    }\n    20% {\n      transform: translate(-3px, 0px) rotate(1deg);\n    }\n    30% {\n      transform: translate(3px, 2px) rotate(0deg);\n    }\n    40% {\n      transform: translate(1px, -1px) rotate(1deg);\n    }\n    50% {\n      transform: translate(-1px, 2px) rotate(-1deg);\n    }\n    60% {\n      transform: translate(-3px, 1px) rotate(0deg);\n    }\n    70% {\n      transform: translate(3px, 1px) rotate(-1deg);\n    }\n    80% {\n      transform: translate(-1px, -1px) rotate(1deg);\n    }\n    90% {\n      transform: translate(1px, 2px) rotate(0deg);\n    }\n    100% {\n      transform: translate(1px, -2px) rotate(-1deg);\n    }\n  }\n</style>\n\n<div class=\"closable\">\n  <div class=\"contentcontainer\">\n    <slot name=\"content\" />\n  </div>\n  <svg\n    on:click={dispatch(eventName, identifier)}\n    xml:space=\"preserve\"\n    viewBox=\"0 0 100 100\"\n    y=\"0\"\n    x=\"0\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    id=\"\"\n    version=\"1.1\"\n    width={size}\n    height={size}\n    style=\"top:0; right:-{size / 2}px\"\n    xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g\n      style=\"transform-origin: 50% 50%; transform: rotate(0deg) scale(0.8, 0.8);\">\n      <circle\n        stroke-miterlimit=\"10\"\n        stroke-width=\"8\"\n        stroke={linecolour}\n        fill=\"white\"\n        r=\"40\"\n        cy=\"50\"\n        cx=\"50\"\n        style=\"\" />\n      <path\n        d=\"M60.6 29.5L50 40.1 39.4 29.5c-2.7-2.7-7.1-2.7-9.9 0-2.7 2.7-2.7 7.1 0\n        9.9L40.1 50 29.5 60.6c-2.7 2.7-2.7 7.1 0 9.9s7.1 2.7 9.9 0L50 59.9l10.6\n        10.6c2.7 2.7 7.1 2.7 9.9 0 2.7-2.7 2.7-7.1 0-9.9L59.9\n        50l10.6-10.6c2.7-2.7 2.7-7.1 0-9.9s-7.2-2.7-9.9 0z\"\n        style=\"fill: {fillcolour}\" />\n    </g>\n  </svg>\n\n</div>\n",
    "<script>\n    import {FileStore} from \"../stores/FileStore\"\n    let highlight = false;\n    function handleDragOver(e) {\n        highlight = true;\n    }\n    function handleDragIn(e) {\n        highlight = true;\n    }\n    function handleDragOut(e) {\n        highlight = false;\n    }\n\n    async function handleDrop(e) {\n        highlight = false;\n        let files = [];\n        for(let item of e.dataTransfer.items){\n\n            let entry  = item.webkitGetAsEntry();\n            if(entry){\n                if(entry.isDirectory){\n                    let entries = await traverseDirectory(entry);\n                    files = files.concat(entries);\n                }else{\n                    files = files.concat([entry])\n                }\n            }else{\n                console.log(\"error: not dropped\", item, entry);\n            }\n            \n        }\n\n        FileStore.addFiles(files);\n\n    }\n    async function traverseDirectory(dir){\n        let returnFiles = [];\n\n        let direntries = await readDirectory(dir);\n        for(let entry of direntries){\n            if(entry.isDirectory){\n                let entries = await traverseDirectory(entry);\n                returnFiles = returnFiles.concat(entries);\n            }else{\n                returnFiles = returnFiles.concat([entry])\n            }\n        }\n        return returnFiles;\n    }\n    async function readDirectory(dir){\n    return new Promise((resolve,reject)=>{\n      dir.createReader().readEntries((entries)=>{\n        resolve(entries);\n      },(err)=>{\n        reject(err);\n      });\n    });\n  }\n\n</script>\n<style>\n    .highlight{\n        border:3px solid RGB(0, 128, 0, .5) !important;\n        background-color: RGB(0, 255, 0, .05) !important;\n        \n    }\n    .dropzone {\n        line-height: 100px;\n        height:100px;\n        border:3px dashed RGB(0, 0, 128, .5);\n        background-color: RGB(0, 0, 255, .05);\n        \n    }\n</style>\n<div class=\"{highlight?'highlight':''} dropzone\"\n    on:dragenter|preventDefault={handleDragIn} \n    on:dragleave|preventDefault={handleDragOut} \n    on:dragover|preventDefault={handleDragOver} \n    on:drop|preventDefault={handleDrop}\n    >\n    Drop area\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}